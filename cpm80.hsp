#include "z80.as"
#include "stdcall.as"
dupptr var_29,get16bitcompatiblememaddr(),65540,2
dupptr tgcmdfilename,get32bitfcbaddr(),128,2
wpoke stackformt@m0(0,0),12,0xFA00
wpoke var_29,0xFA00,0xF500
poke var_29,0,0xc3
wpoke var_29,1,0xF500
poke var_29,5,0xc3
wpoke var_29,6,0xF400
tgcmdfilename2=""
tgcmdfilename2=tgcmdfilename+".com"
exist tgcmdfilename2
strsize2=strsize
if strsize2!=-1{
sdim databinaryfile,strsize2
bload tgcmdfilename2,databinaryfile
}
memcpy var_29,databinaryfile,strsize2,0x100,0
address=0x100
repeat
if peek(var_29,address)=0x76{tx16bitreg=0:nullptrfxxxx=syscall(-1,0,tx16bitreg)}else{z80run address,var_29,0}
if address=0xF400{gosub *scallformain}
if address=0xF500{break}
//awaiti=awaiti+1:if awaiti=65536{awaiti=0:await 1}
loop:tx16bitreg=0:nullptrfxxxx=syscall(0,0,tx16bitreg)
end://stop
*scallformain
tx16bitreg=0:lpoke tx16bitreg,0,wpeek(stackformt@m0(0,0),6)
stackpoke 0,0,0,syscall(stackpeek(0,0,2),wpeek(stackformt@m0(0,0),4),tx16bitreg)
wpoke stackformt@m0(0,0),6,tx16bitreg
address=wpeek(var_29,wpeek(stackformt@m0(0,0),12))
wpoke stackformt@m0(0,0),12,wpeek(stackformt@m0(0,0),12)+2
return